version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: arquitetura
      POSTGRES_USER: sued
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sued -d arquitetura"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Server 1
  server1:
    build: ./server
    environment:
      - DATABASE_URL=postgresql://sued:password@postgres:5432/arquitetura
      - PORTA=8002
    ports:
      - "8002:8002"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Server 2
  server2:
    build: ./server2
    environment:
      - DATABASE_URL=postgresql://sued:password@postgres:5432/arquitetura
      - PORTA=8003
    ports:
      - "8003:8003"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Load Balancer
  load_balancer:
    build: ./load_balancer
    environment:
      - SERVIDORES=http://server1:8002,http://server2:8003
    ports:
      - "8001:8001"
    depends_on:
      - server1
      - server2
    restart: unless-stopped

  # Cache Service
  cache:
    build: ./cache
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "8004:8004"
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Monitoring Service
  monitoring:
    build: ./monitoring
    ports:
      - "8005:8005"
    depends_on:
      - api_gateway
      - load_balancer
      - server1
      - server2
      - cache
    restart: unless-stopped

  # API Gateway
  api_gateway:
    build: ./api_gateway
    environment:
      - LOAD_BALANCER_URL=http://load_balancer:8001
      - SECRET_KEY=sua_chave_secreta_aqui
    ports:
      - "8000:8000"
    depends_on:
      - load_balancer
    restart: unless-stopped

volumes:
  postgres_data: 